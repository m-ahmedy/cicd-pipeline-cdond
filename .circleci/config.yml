version: 2.1

commands:
    destroy-environment:
        description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
        parameters:
            workflow_id:
                type: string
        steps:
            - run:
                  name: Destroy environments
                  when: on_fail
                  command: |
                      # Your code here
                      exit 1

    revert-migrations:
        description: Revert the last migration if successfully run in the current workflow.
        parameters:
            workflow_id:
                type: string
        steps:
            - run:
                  name: Revert migrations
                  # Add when this will run
                  command: |
                      # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
                      SUCCESS = 1
                      if(( $SUCCESS==1 )); 
                      then
                      #  cd ~/project/backend
                      #  npm install
                      #  Add revert code here. You can find this in the Getting Started section.
                        exit 1
                      fi

jobs:
    build-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [frontend-build]
            - run:
                  name: Install NPM dependencies
                  command: cd frontend && npm install
            - run:
                  name: Build front-end
                  command: cd frontend && npm run build
            - save_cache:
                  paths: [frontend/node_modules]
                  key: frontend-build

    build-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [backend-build]
            - run:
                  name: Install NPM dependencies
                  command: cd backend && npm install
            - run:
                  name: Build back-end
                  command: cd backend && npm run build
            - save_cache:
                  paths: [backend/node_modules]
                  key: backend-build

    test-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [frontend-build]
            - run:
                  name: Install NPM dependencies
                  command: cd frontend && npm install
            - run:
                  name: Test front-end
                  command: cd frontend && npm run test

    test-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [backend-build]
            - run:
                  name: Install NPM dependencies
                  command: cd backend && npm install
            - run:
                  name: Test back-end
                  command: cd backend && npm run test

    scan-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [frontend-build]
            - run:
                  name: Install NPM dependencies
                  command: cd frontend && npm install
            - run:
                  name: Test coverage front-end
                  command: cd frontend && npm run test:cov
            - run:
                  name: Security audit front-end
                  command: cd frontend && npm audit

    scan-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [backend-build]
            - run:
                  name: Install NPM dependencies
                  command: cd backend && npm install
            - run:
                  name: Test coverage back-end
                  command: cd backend && npm run test:cov
            - run:
                  name: Security audit back-end
                  command: cd backend && npm audit

cleanup:
    docker:
        # Docker image here
    steps:
        # Checkout code from git
        - run:
              name: Get old stack workflow id
              command: |
                  # your code here
                  export OldWorkflowID="the id here"
                  export STACKS=[] #put the list of stacks here
        - run:
              name: Remove old stacks and files
              command: |
                  if [[ "${STACKS[@]}" =~ "${OldWorkflowID}" ]]
                  then
                    # your code here
                  fi

workflows:
    default:
        jobs:
            - build-frontend
            - build-backend
            - test-frontend:
                  requires: [build-frontend]
            - test-backend:
                  requires: [build-backend]
            - scan-frontend:
                  requires: [build-frontend]
            - scan-backend:
                  requires: [build-backend]
